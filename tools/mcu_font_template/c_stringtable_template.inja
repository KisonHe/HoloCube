/**
 * Generated File, Do not modify
 * 
 */
#include "stringtable.h"
#include <stdint.h>
#include "esp32-hal-log.h"
{% for ptr in font_ptrs %}
fonttype* {{ptr}};{% endfor %}
namespace strings
{
    Language_t CurrentLanguage = {{default_lang}}; //When generating, set default to first lang

    static kh_textdata_t MainData[EndOfLanguages][EndOfTexts] = {
{% for lang in language_strs %}
        { {% for str in lang %}
            {{str}},{% endfor %}
        },{% endfor %}
    };
    
    static const char* FontNames[] = {  //help to load font from file system {% for font_str in font_strs %}
        "{{font_str}}",{% endfor %}
    };

    const char * kh_fonttool_get_text(ID id){
        if (id >= EndOfTexts)
            return nullptr;
        return MainData[CurrentLanguage][id].text;
    }

    fonttype * kh_fonttool_get_font(ID id){
        if (id >= EndOfTexts)
            return nullptr;
        return *(MainData[CurrentLanguage][id].fontptr_ptr);
    }

    int kh_fonttool_set_lang(Language_t lang){
        if (lang >= EndOfLanguages)
            return -1;
        CurrentLanguage = lang; 
        return 0; 
    }

    void kh_load_all_font(){ {% for ptr in font_ptrs %}
        {{ptr}} = lv_font_load("S:/spiffs/{{font_strs[loop.index0]}}.bin");
        if ({{ptr}} == nullptr){log_e("Fail to load %s","S:/spiffs/{{font_strs[loop.index0]}}.bin");}{% endfor %}
    }
  
}
